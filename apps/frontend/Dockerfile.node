# Utiliser l'image Node.js officielle
FROM node:18-alpine AS builder

# Définir le répertoire de travail
WORKDIR /app

# Installer pnpm
RUN npm install -g pnpm

# Copier tout le projet
COPY . .

# Installer l'adapter Node.js pour Astro
WORKDIR /app/apps/frontend
RUN pnpm add @astrojs/node

# Installer les dépendances de chaque package individuellement
WORKDIR /app/packages/shared
RUN pnpm install
RUN pnpm run build

WORKDIR /app/packages/ui
RUN pnpm install
RUN pnpm run build

# Installer et construire l'application frontend avec l'adapter Node.js
WORKDIR /app/apps/frontend
RUN pnpm install
# Copier la configuration Docker
COPY astro.config.docker.mjs astro.config.mjs
RUN pnpm run build

# Stage de production
FROM node:18-alpine AS runner

WORKDIR /app

# Installer pnpm
RUN npm install -g pnpm

# Copier les fichiers de production (adapter Node.js génère dist/)
COPY --from=builder /app/apps/frontend/dist ./dist
COPY --from=builder /app/apps/frontend/package*.json ./

# Installer uniquement les dépendances de production
RUN pnpm install --prod

# Exposer le port
EXPOSE 3000

# Variable d'environnement
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000

# Commande de démarrage pour adapter Node.js
CMD ["node", "dist/server/entry.mjs"]
